/******************************************************************************/
/* Flash.INI: Initialize Microcontroller for Flash Programming                */
/******************************************************************************/
// <<< Use Configuration Wizard in Context Menu >>>                           // 
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2005-2006 Keil Software. All rights reserved.                */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/


FUNC void Init (void) {

  _WDWORD(0xFFFFFFE0, 0x00004007);      // SYSECR: disable violations

  // Setup parameters for memory map
                                        // Flash at 0x00000000 size 256kB
  _WDWORD(0xFFFFFE00, 0x00000000);      // MFBAHR0
  _WDWORD(0xFFFFFE04, 0x00000090);      // MFBALR0

                                        // RAM at   0x20000000 size  16kB
  _WDWORD(0xFFFFFE10, 0x00002000);      // MFBAHR2
  _WDWORD(0xFFFFFE14, 0x00000050);      // MFBALR2

  _WDWORD(0xFFFFFE04, 0x00000190);      // Activate Memory Map

  _WDWORD(0xFFFFFFDC, 0x0000001F);      // GLBCTRL: Enable Flash Configuration
  _WDWORD(0xFFE8BC00, 0x00008000);      // FFMAC1: Disable Level 1 Protection

  _WDWORD(0xFFE8BC04, 0x00000000);      // Select bank 0
  _WDWORD(0xFFE88008, 0xFFFFFFFF);      // FMBSEA: Enable all sectors in bank 0
  _WDWORD(0xFFE8800C, 0xFFFFFFFF);      // FMBSEA: Enable all sectors in bank 0

// <h> Flash Protection Keys
//   <i> They enable programming and erasing of the flash
//   <i> Use the same values as set in the TMS470R1.s file
//   <i> Default state is all at 0xFFFFFFFF
//   <o2.0..31> Flash Protection Key 0 <0x0-0xFFFFFFFF>
  _RDWORD(0x00001FF0);                  // Read Flash Protection KEY 0
  _WDWORD(0xFFE89C0C, 0xFFFFFFFF);      // FMPKEY: Compare key

//   <o2.0..31> Flash Protection Key 1 <0x0-0xFFFFFFFF>
  _RDWORD(0x00001FF4);                  // Read Flash Protection KEY 1
  _WDWORD(0xFFE89C0C, 0xFFFFFFFF);      // FMPKEY: Compare key

//   <o2.0..31> Flash Protection Key 2 <0x0-0xFFFFFFFF>
  _RDWORD(0x00001FF8);                  // Read Flash Protection KEY 2
  _WDWORD(0xFFE89C0C, 0xFFFFFFFF);      // FMPKEY: Compare key

//   <o2.0..31> Flash Protection Key 3 <0x0-0xFFFFFFFF>
  _RDWORD(0x00001FFC);                  // Read Flash Protection KEY 3
  _WDWORD(0xFFE89C0C, 0xFFFFFFFF);      // FMPKEY: Compare key

// </h>

  _WDWORD(0xFFE89C00, 0x00000000);      // FMREGOPT: Clear READOTP bit
}


Init();                                 // Initialize

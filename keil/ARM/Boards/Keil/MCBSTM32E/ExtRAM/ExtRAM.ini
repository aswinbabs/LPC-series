
/******************************************************************************/
/* STM32DBG.INI: STM32 Debugger Initialization File                           */
/******************************************************************************/
// <<< Use Configuration Wizard in Context Menu >>>                           // 
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2005-2007 Keil Software. All rights reserved.                */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/


FUNC void Init (void) {
// <h> Debug MCU Configuration
//   <o1.0>    DBG_SLEEP     <i> Debug Sleep Mode
//   <o1.1>    DBG_STOP      <i> Debug Stop Mode
//   <o1.2>    DBG_STANDBY   <i> Debug Standby Mode
//   <o1.5>    TRACE_IOEN    <i> Trace I/O Enable 
//   <o1.6..7> TRACE_MODE    <i> Trace Mode
//             <0=> Asynchronous
//             <1=> Synchronous: TRACEDATA Size 1
//             <2=> Synchronous: TRACEDATA Size 2
//             <3=> Synchronous: TRACEDATA Size 4
//   <o1.8>    DBG_IWDG_STOP <i> Independant Watchdog Stopped when Core is halted
//   <o1.9>    DBG_WWDG_STOP <i> Window Watchdog Stopped when Core is halted
//   <o1.10>   DBG_TIM1_STOP <i> Timer 1 Stopped when Core is halted
//   <o1.11>   DBG_TIM2_STOP <i> Timer 2 Stopped when Core is halted
//   <o1.12>   DBG_TIM3_STOP <i> Timer 3 Stopped when Core is halted
//   <o1.13>   DBG_TIM4_STOP <i> Timer 4 Stopped when Core is halted
//   <o1.14>   DBG_CAN_STOP  <i> CAN Stopped when Core is halted
// </h>
  _WDWORD(0xE0042004, 0x00000027);  // DBGMCU_CR
}


FUNC void Init_ExtRAM(void)
{  
  _WDWORD(0x40021018, 0x1e1);         // RCC->APB2ENR  5, 6, 7, 8, AFIO
  _WDWORD(0x40021014, 0x114);         // RCC->AHBENR
  
  _WDWORD(0x40011400, 0x44BB44BB);    // GPIOD->CRL
  _WDWORD(0x40011404, 0xBBBBBBBB);    // GPIOD->CRH
 
  _WDWORD(0x40011800, 0xB44444BB);    // GPIOE->CRL
  _WDWORD(0x40011804, 0xBBBBBBBB);    // GPIOE->CRH
 
  _WDWORD(0x40011c00, 0x44BBBBBB);    // GPIOF->CRL
  _WDWORD(0x40011c04, 0xBBBB4444);    // GPIOF->CRH
 
  _WDWORD(0x40012000, 0x44BBBBBB);    // GPIOG->CRL
  _WDWORD(0x40012004, 0x444B4B44);    // GPIOG->CRH
  
  _WDWORD(0xA0000014, 0x00000100);    // FSMC Bank1 NOR/SRAM timing register configuration
  _WDWORD(0xA0000010, 0x00001211);    // FSMC Control Register
}



FUNC void Setup(void) {
 
   // Set up SP and PC
   SP = _RDWORD(0x68000000);
   PC = _RDWORD(0x68000004);                     // Setup Program Counter
  _WDWORD(0xE000ED08, 0x68000000);               // Setup Vector Table Offset Register
}


FUNC void ResetApp(void)
{
  Init_ExtRAM();
  Setup();
}


Init();
Init_ExtRAM();
LOAD ram\ExtRAM.axf INCREMENTAL       // Download
Setup();                              // Debugger Setup

g, main



KILL BUTTON *
define button "Reset for RAM", "ResetApp()"



/*
 *  Simulate LCD Display (2 line 40 character Text LCD with 4-bit Interface)
 *    Pins:
 *      - DB4..DB7 = PC.0..PC.3
 *      - RS       = PC.12
 *      - RW       = PC.11
 *      - E        = PC.10
 */

define unsigned long oldPORTC;
define unsigned char Cursor;
define unsigned char bitpos;
define unsigned char Cmd;

define unsigned long _E;
define unsigned long _RW;
define unsigned long _RS;
define unsigned long _CTRL;
define unsigned long _DATA;

MAP 0x10000000, 0x1000004F READ WRITE   // LCD Memory

oldPORTC = PORTC;
Cursor   = 0;
bitpos   = 0;

_E    = 0x00000400;
_RW   = 0x00000800;
_RS   = 0x00001000;
_CTRL = 0x00001C00;
_DATA = 0x0000000F;

// SWAP data Function
Func unsigned char SwapData (unsigned char x) {
  return (((x & 0x01) << 3) | ((x & 0x02) << 1) | ((x & 0x04) >> 1) | ((x & 0x08) >> 3));
}

// Clear Display Function
Func void LCD_Clear (void) {
  unsigned char i;

  for (i = 0; i < 80; i++) {
    _WBYTE(0x10000000 + i, 0x20);
  }
  Cursor = 0;
}

// LCD Display Signal Function
Signal void LCD_Display (void) {
  unsigned char val;

  while (1) {
    wwatch(PORTC);  // Wait for write to PORTC
    if ((PORTC & _RW) == 0) {
      // Write to Display
      if (((oldPORTC & _E) != 0) && ((PORTC & _E) == 0)) {
        // E: 1->0
        if ((PORTC & _RS) == 0) {
          // Write Command
          val  = SwapData(PORTC & _DATA);
          if (val == 3) {
            bitpos = 4;
          }
          Cmd &= 0xF0 >> bitpos;
          Cmd |= val << bitpos;
          if (bitpos == 0) {
            if (Cmd == 0x01) {
              // Clear Display
              LCD_Clear();
            } else if (Cmd & 0x80) {
              // Set Cursor Position
              Cursor = Cmd & 0x7F;
            }
          }
        } else {
          // Write Data
          val  = _RBYTE(0x10000000 + Cursor);
          val &= 0xF0 >> bitpos;
          val |= SwapData(PORTC & _DATA) << bitpos;
          _WBYTE(0x10000000 + Cursor, val);
          if (bitpos == 0) Cursor++;
        }
        bitpos ^= 4;
      }
    } else {
      // Read from Display
      if (((oldPORTC & _E) == 0) && ((PORTC & _E) != 0)) {
        // E: 0->1
        if ((PORTC & _RS) == 0) {
          // Read Status
          val = (0x7F >> bitpos) & 0x0F;
        } else {
          // Read Pointer
          val = ((Cursor & 0x7F) >> bitpos) & 0x0F;
        }
        PORTC &= ~_DATA;
        PORTC |=  SwapData(val);
        bitpos ^= 4;
      }
    }
    oldPORTC = PORTC;
  }
}

LCD_Display()

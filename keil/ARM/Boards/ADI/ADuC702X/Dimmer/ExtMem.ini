/******************************************************************************/
/* ExtMem.INI: External Memory Initialization File                            */
/******************************************************************************/
// <<< Use Configuration Wizard in Context Menu >>>                           // 
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2005-2006 Keil Software. All rights reserved.                */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/


FUNC void Setup (void) {

// <h> External Memory Interface

//   <e1.0> Enable Memory Region 0
//     <o1.1>      Data Bus Width  <0=> 8-bit  <1=> 16-bit
//     <o3.11>     Enable Dynamic Addressing
//     <o3.15>     Byte Enabled Write Strobe
//     <o3.10>     Disable extra Address Latch Hold Cycle
//     <o3.8>      Disable extra Write Address Hold Cycle
//     <o3.9>      Disable Read Bus Turn Cycle
//     <o3.12..14> Address Wait States <0-7>
//                 <i> Number of Wait States added for AE
//     <o3.0..3>   Read Wait States <0-15>
//                 <i> Number of Wait States added for RS
//     <o3.4..7>   Write Wait States <0-15>
//                 <i> Number of Wait States added for WS
//   </e>
  _WDWORD(0xFFFFF010, 0x00000000);   // XM0CON
  _WDWORD(0xFFFFF020, 0x000070FF);   // XM0PAR

//   <e1.0> Enable Memory Region 1
//     <o1.1>      Data Bus Width  <0=> 8-bit  <1=> 16-bit
//     <o3.11>     Enable Dynamic Addressing
//     <o3.15>     Byte Enabled Write Strobe
//     <o3.10>     Disable extra Address Latch Hold Cycle
//     <o3.8>      Disable extra Write Address Hold Cycle
//     <o3.9>      Disable Read Bus Turn Cycle
//     <o3.12..14> Address Wait States <0-7>
//                 <i> Number of Wait States added for AE
//     <o3.0..3>   Read Wait States <0-15>
//                 <i> Number of Wait States added for RS
//     <o3.4..7>   Write Wait States <0-15>
//                 <i> Number of Wait States added for WS
//   </e>
  _WDWORD(0xFFFFF014, 0x00000003);   // XM1CON
  _WDWORD(0xFFFFF024, 0x00003877);   // XM1PAR

//   <e1.0> Enable Memory Region 2
//     <o1.1>      Data Bus Width  <0=> 8-bit  <1=> 16-bit
//     <o3.11>     Enable Dynamic Addressing
//     <o3.15>     Byte Enabled Write Strobe
//     <o3.10>     Disable extra Address Latch Hold Cycle
//     <o3.8>      Disable extra Write Address Hold Cycle
//     <o3.9>      Disable Read Bus Turn Cycle
//     <o3.12..14> Address Wait States <0-7>
//                 <i> Number of Wait States added for AE
//     <o3.0..3>   Read Wait States <0-15>
//                 <i> Number of Wait States added for RS
//     <o3.4..7>   Write Wait States <0-15>
//                 <i> Number of Wait States added for WS
//   </e>
  _WDWORD(0xFFFFF018, 0x00000000);   // XM2CON
  _WDWORD(0xFFFFF028, 0x000070FF);   // XM2PAR

//   <e1.0> Enable Memory Region 3
//     <o1.1>      Data Bus Width  <0=> 8-bit  <1=> 16-bit
//     <o3.11>     Enable Dynamic Addressing
//     <o3.15>     Byte Enabled Write Strobe
//     <o3.10>     Disable extra Address Latch Hold Cycle
//     <o3.8>      Disable extra Write Address Hold Cycle
//     <o3.9>      Disable Read Bus Turn Cycle
//     <o3.12..14> Address Wait States <0-7>
//                 <i> Number of Wait States added for AE
//     <o3.0..3>   Read Wait States <0-15>
//                 <i> Number of Wait States added for RS
//     <o3.4..7>   Write Wait States <0-15>
//                 <i> Number of Wait States added for WS
//   </e>
  _WDWORD(0xFFFFF01C, 0x00000000);   // XM3CON
  _WDWORD(0xFFFFF02C, 0x000070FF);   // XM3PAR

//   <e1.0>        Memory Muxed Mode
  _WDWORD(0xFFFFF000, 0x00000001);   // XMCFG
//   </e>

// </h>


// Configure GPIO
  _WDWORD(0xFFFFF400, 0x01001220);   // GP0CON:	XBEN0, XBEN1
  _WDWORD(0xFFFFF408, 0x22222220);   // GP2CON:	MS0..3, AE, RS, WS
  _WDWORD(0xFFFFF40C, 0x22222222);   // GP3CON: AD0..7
  _WDWORD(0xFFFFF410, 0x22222222);   // GP4CON:	AD8..15

}


Setup();                             // Setup External Memory Interface

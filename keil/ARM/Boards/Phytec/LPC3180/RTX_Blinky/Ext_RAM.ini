/******************************************************************************/
/* Ext_RAM.INI: External RAM (SDRAM) Initialization File                      */
/******************************************************************************/
// <<< Use Configuration Wizard in Context Menu >>>                           // 
/******************************************************************************/
/* This file is part of the uVision/ARM development tools.                    */
/* Copyright (c) 2005-2008 Keil Software. All rights reserved.                */
/* This software may only be used under the terms of a valid, current,        */
/* end user licence from KEIL for a compatible version of KEIL software       */
/* development tools. Nothing else gives you the right to use this software.  */
/******************************************************************************/


FUNC void SetupForStart (void) {

// <o> Program Entry Point
  PC = 0x80000000;
}


FUNC void Init (void) {

  _WDWORD(0x4003C004, 0x00000000);      // Disable Watchdog Timer

  _WDWORD(0x40004068, 0x0001C000);      // SDRAM Clock
  _WDWORD(0x31080000, 0x00000001);      // SDRAM Controller Control Register
  _WDWORD(0x31080008, 0x00000000);      // SDRAM Controller Configuration Register
  _WDWORD(0x31080400, 0x00000001);      // SDRAM Controller AHB Control 0
  _WDWORD(0x31080440, 0x00000001);      // SDRAM Controller AHB Control 2
  _WDWORD(0x31080460, 0x00000001);      // SDRAM Controller AHB Control 3
  _WDWORD(0x31080480, 0x00000001);      // SDRAM Controller AHB Control 4
  _WDWORD(0x31080100, 0x00005482);      // Dynamic Memory Config 0 Register 
  _WDWORD(0x31080104, 0x00000303);      // Dynamic Memory RAS and CAS Register
  _WDWORD(0x31080028, 0x00000011);      // Dynamic Memory Read Config Register
  _WDWORD(0x31080030, 0x00000002);      // Memory Precharge Command Period Reg
  _WDWORD(0x31080034, 0x00000005);      // Memory Active to Precharge Cmd Reg
  _WDWORD(0x31080038, 0x00000008);      // Dynamic Mem Self-Refsh Exit Time Reg
  _WDWORD(0x31080044, 0x00000001);      // Dynamic Mem Write Recovery Time Reg
  _WDWORD(0x31080048, 0x00000008);      // Memory Active to Active Cmd Register
  _WDWORD(0x3108004C, 0x00000008);      // Dynamic Mem Auto-Refsh Period Reg
  _WDWORD(0x31080050, 0x00000008);      // Dynamic Mem Exit Self-Refsh Register
  _WDWORD(0x31080054, 0x00000001);      // Dynamic Mem Active Bank A to B Reg
  _WDWORD(0x31080058, 0x00000001);      // Dynamic Mem Load Mode Reg to Act Cmd
  _WDWORD(0x3108005C, 0x00000000);      // Dynamic Mem Last Data In to Read Cmd
  _sleep_(100);                         // Wait 100 ms
  _WDWORD(0x31080020, 0x00000193);      // Dynamic Memory Control Register
  _sleep_(200);                         // Wait 200 ms
  _WDWORD(0x31080020, 0x00000113);      // Dynamic Memory Control Register
  _WDWORD(0x31080024, 0x00000002);      // Dynamic Memory Refresh Timer Register
  _sleep_(15);                          // Wait 10 ms
  _WDWORD(0x31080024, 0x00000065);      // Dynamic Memory Refresh Timer Register
  _WDWORD(0x31080104, 0x00000303);      // Dynamic Memory RAS and CAS Register
  _WDWORD(0x31080100, 0x00005482);      // Dynamic Memory Config 0 Register 
  _WDWORD(0x31080020, 0x00000093);      // Dynamic Memory Control Register
  _RDWORD(0x80018000);                  // Load Mode Register
  _WDWORD(0x31080020, 0x00000093);      // Dynamic Memory Control Register
  _RDWORD(0x8102C000);                  // Load Extended Mode Register
  _WDWORD(0x31080020, 0x00000010);      // Dynamic Memory Control Register
  _WDWORD(0x31080408, 0x00000064);      // SDRAM Controller AHB Timeout 0 Reg
  _WDWORD(0x31080448, 0x00000190);      // SDRAM Controller AHB Timeout 2 Reg
  _WDWORD(0x31080468, 0x00000190);      // SDRAM Controller AHB Timeout 3 Reg
  _WDWORD(0x31080488, 0x00000190);      // SDRAM Controller AHB Timeout 4 Reg
}


Init();                                 // Initialize memory
LOAD Output\Blinky.axf INCREMENTAL      // Download program
SetupForStart();                        // Setup for Running
g, main                                 // Go to Main


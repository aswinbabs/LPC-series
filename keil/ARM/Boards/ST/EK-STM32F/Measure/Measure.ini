/*----------------------------------------------------------------------------
 * Name:    Measure.ini
 * Purpose: Functions used for simulating peripherals
 * Version: V1.01
 *----------------------------------------------------------------------------
 * This file is part of the uVision/ARM development tools.
 * This software may only be used under the terms of a valid, current,
 * end user licence from KEIL for a compatible version of KEIL software
 * development tools. Nothing else gives you the right to use this software.
 *
 * Copyright (c) 2005-2007 Keil Software. All rights reserved.
 *----------------------------------------------------------------------------*/


/*----------------------------------------------------------------------------
  MyStatus shows analog and other values ...
 *----------------------------------------------------------------------------*/
FUNC void MyStatus (void)  {
  printf ("=============================\n");
  printf (" Analog-Input-1:  %f\n", ADC1_IN10);
  printf (" GPIOD: %08X\n", PORTD);
  printf ("=============================\n");
}

/*----------------------------------------------------------------------------
  Simulate Push button Key3 
    Pins:
      - Key3 = PD.04
 *----------------------------------------------------------------------------*/
PORTD |= 0x000010;                      // set PD.04 high: Key Input

// debug function for the push button S3
signal void push_key3 (void)  {
  PORTD &= ~0x000010;                   // set PD.04 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTD |= 0x000010;                    // set PD.04 high (Key released)
}

/*----------------------------------------------------------------------------
  Simulate Push button Key2 
    Pins:
      - Key2 = PA.0
 *----------------------------------------------------------------------------*/
PORTD |= 0x000008;                      // set PD.03 high: Key Input

// debug function for the push button S2
signal void push_key2 (void)  {
  PORTD &= ~0x000008;                   // set PD.03 low  (Key pressed)
  swatch (0.025);                       // wait 25 msec
  PORTD |= 0x000008;                    // set PD.03 high (Key released)
}

/*----------------------------------------------------------------------------
  Analog1() simulates analog input values given to channel-10 (ADC1)
 *----------------------------------------------------------------------------*/
Signal void Analog1 (float limit)  {
  float volts;

  printf ("Analog1 (%f) entered.\n", limit);
  while (1)  {                          // forever
    volts = 0;
    while (volts <= limit)  {
      ADC1_IN10 = volts;                // analog input-1
//      swatch (0.01);                    // wait 0.01 seconds
      twatch (250000);                  // 250000 Cycles Time-Break
      volts += 0.1;                     // increase voltage
    }
    volts = limit;
    while (volts >= 0.0)  {
      ADC1_IN10 = volts;
//      swatch (0.01);                    // wait 0.01 seconds
      twatch (250000);                  // 250000 Cycles Time-Break
      volts -= 0.1;                     // decrease voltage
    }
  }
}


/* define a toolbar buttons */
kill button *
define button "Button Key2", "push_key2 ()"
define button "Button Key3", "push_key3 ()"
define button "My Status Info", "MyStatus ()"
define button "Analog1 0..3V", "Analog1(3.0)"
define button "Stop Analog1", "signal kill Analog1"

